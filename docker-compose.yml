version: '3.8'

services:
  database:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: festify
      MYSQL_USER: festify_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/schema_update.sql:/docker-entrypoint-initdb.d/02-schema_update.sql
    ports:
      - "3306:3306"
    networks:
      - festify-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: festify_user
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: festify
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - "5000:5000"
    depends_on:
      - database
    networks:
      - festify-network
    volumes:
      - backend_logs:/app/logs

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - festify-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - festify-network

volumes:
  mysql_data:
  backend_logs:

networks:
  festify-network:
    driver: bridge